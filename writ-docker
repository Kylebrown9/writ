#!/bin/env bash

DOCKER=$(command -v docker)
if [ -z "${DOCKER}" ] ; then
    echo "Docker was not found in your PATH.  Aborting."
    exit 1
fi

usage() {
    cat <<EOF
Usage: $0 [-d [-s DIR]] [-w WITPATH] WASMPATH FUNCNAME [...]"

Arguments:
  WASMPATH  Specifies the path to the Wasm module (.wasm file)
  FUNCNAME  Specifies the Wasm function name to run

  Additional arguments will be passed directly to the Wasm function.

Options:
  -d, --debug  Runs the Wasm module in GDB
  -s, --source Specifies a source code directory; may be used multiple times
               (only valid with -d)
  -w, --wit    Specifies the path to the WIT file
EOF
    exit 1
}

DEBUG=0
SRC_DIRS=()
WIT_PATH=
while [ 1 ] ; do
    case "$1" in
        -d|--debug)
            if [ $DEBUG -eq 1 ] ; then
                echo "ERROR: -d/--debug may only be specified once."
                echo
                usage
            fi
            DEBUG=1
            ;;
        -s|--source)
            shift
            [ -z "$1" ] && usage
            if [ ! -d "$1" ] ; then
                echo "ERROR: The source directory '$1' does not exist.  Aborting."
                exit 1
            fi
            SRC_DIRS+=($(readlink -f $1))
            ;;
        -w|--wit)
            shift
            [ -z "$1" ] && usage
            if [ -n "$WIT_PATH" ] ; then
                echo "ERROR: WIT path may only be specified once."
                echo
                usage
            fi
            if [ ! -f "$1" ] ; then
                echo "ERROR: The WIT file '$1' does not exist.  Aborting."
                exit 1
            fi
            WIT_PATH=$(readlink -f $1)
            ;;
        -*)
            usage
            ;;
        *)
            break
            ;;
    esac
    shift
done
[ $# -lt 2 ] && usage

if [ ${#SRC_DIRS[@]} -gt 0 -a $DEBUG -eq 0 ] ; then
    echo "ERROR: The --source option is only valid with --debug."
    echo
    usage
fi

WASM_PATH=$(readlink -f $1)
shift
WASM_FUNC=$1
shift

if [ ! -f "${WASM_PATH}" ] ; then
    echo "ERROR: The Wasm file '${WASM_PATH}' does not exist.  Aborting."
    exit 1
fi

WIT_DIR=$(dirname ${WIT_PATH})
WIT_NAME=$(basename ${WIT_PATH})
WASM_DIR=$(dirname ${WASM_PATH})
WASM_NAME=$(basename ${WASM_PATH})

WRIT_CACHE_DIR=/tmp/writ-bind-cache-$(id -un)
DOCKER_RUN_ARGS="-it --rm -v ${WRIT_CACHE_DIR}:/writ-cache -v ${WIT_DIR}:/wit-dir -v ${WASM_DIR}:/wasm-dir"
GDB_OPTS=

for SRC_DIR_IDX in "${!SRC_DIRS[@]}" ; do
    SRC_DIR="${SRC_DIRS[$SRC_DIR_IDX]}"
    MAPPED_SRC_DIR="/src-dirs/src-${SRC_DIR_IDX}"
    DOCKER_RUN_ARGS="${DOCKER_RUN_ARGS} -v ${SRC_DIR}:${MAPPED_SRC_DIR}"
    GDB_OPTS="${GDB_OPTS} -d ${MAPPED_SRC_DIR}"
done

if [ ${DEBUG} -eq 1 ] ; then
    echo "Entering debug mode ..."
    DOCKER_RUN_ARGS="${DOCKER_RUN_ARGS} --entrypoint /writ/docker-run-gdb"
    GDB_OPTS="${GDB_OPTS} -q --tui --args /usr/local/bin/python /writ/src/writ"
fi

WIT_OPT=
if [ -n "${WIT_PATH}" ] ; then
    WIT_OPT="--wit /wit-dir/${WIT_NAME}"
fi

"${DOCKER}" run ${DOCKER_RUN_ARGS} writ $GDB_OPTS -b /writ-cache ${WIT_OPT} "/wasm-dir/${WASM_NAME}" "${WASM_FUNC}" "$@"

